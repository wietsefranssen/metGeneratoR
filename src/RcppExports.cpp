// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rad_map_final_cr
NumericVector rad_map_final_cr(int nrec, int yday, int nx_parts);
RcppExport SEXP _metGeneratoR_rad_map_final_cr(SEXP nrecSEXP, SEXP ydaySEXP, SEXP nx_partsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nrec(nrecSEXP);
    Rcpp::traits::input_parameter< int >::type yday(ydaySEXP);
    Rcpp::traits::input_parameter< int >::type nx_parts(nx_partsSEXP);
    rcpp_result_gen = Rcpp::wrap(rad_map_final_cr(nrec, yday, nx_parts));
    return rcpp_result_gen;
END_RCPP
}
// rad_map_lats_cr
NumericVector rad_map_lats_cr(int nt, int yday);
RcppExport SEXP _metGeneratoR_rad_map_lats_cr(SEXP ntSEXP, SEXP ydaySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nt(ntSEXP);
    Rcpp::traits::input_parameter< int >::type yday(ydaySEXP);
    rcpp_result_gen = Rcpp::wrap(rad_map_lats_cr(nt, yday));
    return rcpp_result_gen;
END_RCPP
}
// solar_geom_cr
NumericVector solar_geom_cr(float lat, int yday, int timesteps_per_day);
RcppExport SEXP _metGeneratoR_solar_geom_cr(SEXP latSEXP, SEXP ydaySEXP, SEXP timesteps_per_daySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type lat(latSEXP);
    Rcpp::traits::input_parameter< int >::type yday(ydaySEXP);
    Rcpp::traits::input_parameter< int >::type timesteps_per_day(timesteps_per_daySEXP);
    rcpp_result_gen = Rcpp::wrap(solar_geom_cr(lat, yday, timesteps_per_day));
    return rcpp_result_gen;
END_RCPP
}
// timesTwo
NumericVector timesTwo(NumericVector x);
RcppExport SEXP _metGeneratoR_timesTwo(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(timesTwo(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_metGeneratoR_rad_map_final_cr", (DL_FUNC) &_metGeneratoR_rad_map_final_cr, 3},
    {"_metGeneratoR_rad_map_lats_cr", (DL_FUNC) &_metGeneratoR_rad_map_lats_cr, 2},
    {"_metGeneratoR_solar_geom_cr", (DL_FUNC) &_metGeneratoR_solar_geom_cr, 3},
    {"_metGeneratoR_timesTwo", (DL_FUNC) &_metGeneratoR_timesTwo, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_metGeneratoR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
